name: CI

on: push

jobs:
  build:
    # You must use a Linux environment when using service containers or container jobs
    runs-on: ubuntu-20.04
    env:
      AWS_DEFRA_RUBY_MOCKS_ACCESS_KEY_ID: 123
      AWS_DEFRA_RUBY_MOCKS_BUCKET: abc
      AWS_DEFRA_RUBY_MOCKS_SECRET_ACCESS_KEY: bcd

      WCRS_REGISTRATION_EXPIRES_AFTER: 3
      WCRS_REGISTRATION_RENEWAL_WINDOW: 3
      WCRS_REGISTRATION_GRACE_WINDOW: 5
      WCRS_USE_XVFB_FOR_WICKEDPDF: true

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of sonarcloud analysis

      # Install various other dependencies
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install xvfb -y
          sudo apt-get install wkhtmltopdf -y

      # We don't have to specify the ruby version, or grab it from .ruby-verion. This action supports reading the
      # version from .ruby-version itself
      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      # Install MongoDB as per https://www.mongodb.com/community/forums/t/installing-mongodb-over-ubuntu-22-04/159931
      - name: Install mongosh
        run: |
          sudo apt-get install gnupg
          wget -qO- https://www.mongodb.org/static/pgp/server-7.0.asc | sudo tee /etc/apt/trusted.gpg.d/server-7.0.asc
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/7.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-7.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-mongosh

      - name: Start MongoDB in single node form and create admin user
        uses: supercharge/mongodb-github-action@1.12.0
        with:
          mongodb-version: '7.0'
          mongodb-username: mongoAdmin
          mongodb-password: password1234

      - name: Set up databases
        run: |
          mongosh "mongodb://mongoAdmin:password1234@localhost:27017/waste-carriers-test?authSource=admin" --eval 'db.createUser({user:"mongoUser", pwd:"password1234", roles:["readWrite", "dbAdmin", "userAdmin"]})'
          mongosh "mongodb://mongoAdmin:password1234@localhost:27017/waste-carriers-users-test?authSource=admin" --eval 'db.createUser({user:"mongoUser", pwd:"password1234", roles:["readWrite", "dbAdmin", "userAdmin"]})'

      # Run linting first. No point running the tests if there is a linting issue
      - name: Run lint check
        run: |
          bundle exec rubocop --format progress --format json --out rubocop-result.json

      # This includes an extra run step. The sonarcloud analysis will be run in a docker container with the current
      # folder mounted as `/github/workspace`. The problem is when the coverage.json file is generated it will
      # reference the code in the current folder. So to enable sonarcloud to matchup code coverage with the files we use
      # sed to update the references in coverage.json
      # https://community.sonarsource.com/t/code-coverage-doesnt-work-with-github-action/16747/6
      - name: Run unit tests
        run: |
          bundle exec rspec
          sed -i "s@/home/runner/work/DEFRA/waste-carriers-front-office@/github/workspace@g" coverage/coverage.json

      - name: Analyze with SonarCloud
        uses: sonarsource/sonarqube-scan-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This is provided automatically by GitHub
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # This needs to be set in your repo; settings -> secrets
